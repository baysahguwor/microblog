2022-03-29 15:19:25,901 ERROR: Exception on / [GET] [in C:\microblog\venv\lib\site-packages\flask\app.py:1457]
Traceback (most recent call last):
  File "C:\microblog\venv\lib\site-packages\sqlalchemy\util\_collections.py", line 1008, in __call__
    return self.registry[key]
KeyError: <greenlet.greenlet object at 0x0000021A6124D850 (otid=0x0000021A61247200) current active started main>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\microblog\venv\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\microblog\venv\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\microblog\venv\lib\site-packages\flask\app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "C:\microblog\venv\lib\site-packages\flask\app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "C:\microblog\app\main\routes.py", line 16, in before_request
    if current_user.is_authenticated:
  File "C:\microblog\venv\lib\site-packages\werkzeug\local.py", line 436, in __get__
    obj = instance._get_current_object()
  File "C:\microblog\venv\lib\site-packages\werkzeug\local.py", line 565, in _get_current_object
    return self.__local()  # type: ignore
  File "C:\microblog\venv\lib\site-packages\flask_login\utils.py", line 26, in <lambda>
    current_user = LocalProxy(lambda: _get_user())
  File "C:\microblog\venv\lib\site-packages\flask_login\utils.py", line 346, in _get_user
    current_app.login_manager._load_user()
  File "C:\microblog\venv\lib\site-packages\flask_login\login_manager.py", line 318, in _load_user
    user = self._user_callback(user_id)
  File "C:\microblog\app\models.py", line 126, in load_user
    return User.query.get(int(id))
  File "C:\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 552, in __get__
    return type.query_class(mapper, session=self.sa.session())
  File "C:\microblog\venv\lib\site-packages\sqlalchemy\orm\scoping.py", line 47, in __call__
    sess = self.registry()
  File "C:\microblog\venv\lib\site-packages\sqlalchemy\util\_collections.py", line 1010, in __call__
    return self.registry.setdefault(key, self.createfunc())
  File "C:\microblog\venv\lib\site-packages\sqlalchemy\orm\session.py", line 4205, in __call__
    return self.class_(**local_kw)
  File "C:\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 176, in __init__
    bind = options.pop('bind', None) or db.engine
  File "C:\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 998, in engine
    return self.get_engine()
  File "C:\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 1017, in get_engine
    return connector.get_engine()
  File "C:\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 592, in get_engine
    sa_url = make_url(uri)
  File "C:\microblog\venv\lib\site-packages\sqlalchemy\engine\url.py", line 731, in make_url
    return _parse_rfc1738_args(name_or_url)
  File "C:\microblog\venv\lib\site-packages\sqlalchemy\engine\url.py", line 792, in _parse_rfc1738_args
    raise exc.ArgumentError(
sqlalchemy.exc.ArgumentError: Could not parse rfc1738 URL from string ' '
2022-03-29 15:20:17,409 INFO: Microblog startup [in C:\microblog\app\__init__.py:82]
2022-03-29 15:21:13,006 INFO: Microblog startup [in C:\microblog\app\__init__.py:82]
2022-03-29 15:37:10,919 INFO: Microblog startup [in C:\microblog\app\__init__.py:82]
2022-03-29 15:37:13,765 ERROR: Exception on / [GET] [in C:\microblog\venv\lib\site-packages\flask\app.py:1457]
Traceback (most recent call last):
  File "C:\microblog\venv\lib\site-packages\sqlalchemy\util\_collections.py", line 1008, in __call__
    return self.registry[key]
KeyError: <greenlet.greenlet object at 0x00000268E819D850 (otid=0x00000268E81931C0) current active started main>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\microblog\venv\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\microblog\venv\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\microblog\venv\lib\site-packages\flask\app.py", line 1514, in full_dispatch_request
    rv = self.preprocess_request()
  File "C:\microblog\venv\lib\site-packages\flask\app.py", line 1857, in preprocess_request
    rv = self.ensure_sync(before_func)()
  File "C:\microblog\app\main\routes.py", line 16, in before_request
    if current_user.is_authenticated:
  File "C:\microblog\venv\lib\site-packages\werkzeug\local.py", line 436, in __get__
    obj = instance._get_current_object()
  File "C:\microblog\venv\lib\site-packages\werkzeug\local.py", line 565, in _get_current_object
    return self.__local()  # type: ignore
  File "C:\microblog\venv\lib\site-packages\flask_login\utils.py", line 26, in <lambda>
    current_user = LocalProxy(lambda: _get_user())
  File "C:\microblog\venv\lib\site-packages\flask_login\utils.py", line 346, in _get_user
    current_app.login_manager._load_user()
  File "C:\microblog\venv\lib\site-packages\flask_login\login_manager.py", line 318, in _load_user
    user = self._user_callback(user_id)
  File "C:\microblog\app\models.py", line 126, in load_user
    return User.query.get(int(id))
  File "C:\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 552, in __get__
    return type.query_class(mapper, session=self.sa.session())
  File "C:\microblog\venv\lib\site-packages\sqlalchemy\orm\scoping.py", line 47, in __call__
    sess = self.registry()
  File "C:\microblog\venv\lib\site-packages\sqlalchemy\util\_collections.py", line 1010, in __call__
    return self.registry.setdefault(key, self.createfunc())
  File "C:\microblog\venv\lib\site-packages\sqlalchemy\orm\session.py", line 4205, in __call__
    return self.class_(**local_kw)
  File "C:\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 176, in __init__
    bind = options.pop('bind', None) or db.engine
  File "C:\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 998, in engine
    return self.get_engine()
  File "C:\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 1017, in get_engine
    return connector.get_engine()
  File "C:\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 593, in get_engine
    sa_url, options = self.get_options(sa_url, echo)
  File "C:\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 608, in get_options
    sa_url, options = self._sa.apply_driver_hacks(self._app, sa_url, options)
  File "C:\microblog\venv\lib\site-packages\flask_sqlalchemy\__init__.py", line 933, in apply_driver_hacks
    if sa_url.drivername.startswith('mysql'):
AttributeError: 'NoneType' object has no attribute 'drivername'
2022-03-29 15:38:20,770 INFO: Microblog startup [in C:\microblog\app\__init__.py:82]
2022-03-29 16:34:32,421 INFO: Microblog startup [in C:\microblog\app\__init__.py:82]
2022-03-29 16:53:05,373 INFO: Microblog startup [in C:\microblog\app\__init__.py:82]
2022-03-29 21:25:46,107 INFO: Microblog startup [in C:\microblog\app\__init__.py:82]
2022-03-29 21:29:39,435 INFO: Microblog startup [in C:\microblog\app\__init__.py:82]
2022-03-29 21:50:58,686 INFO: Microblog startup [in C:\microblog\app\__init__.py:82]
2022-03-30 11:35:59,069 INFO: Microblog startup [in C:\microblog\app\__init__.py:82]
2022-03-30 11:36:19,015 ERROR: Exception on / [GET] [in C:\microblog\venv\lib\site-packages\flask\app.py:1457]
Traceback (most recent call last):
  File "C:\microblog\venv\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\microblog\venv\lib\site-packages\flask\app.py", line 1518, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\microblog\venv\lib\site-packages\flask\app.py", line 1516, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\microblog\venv\lib\site-packages\flask\app.py", line 1502, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "C:\microblog\venv\lib\site-packages\flask_login\utils.py", line 271, in decorated_view
    return current_app.login_manager.unauthorized()
  File "C:\microblog\venv\lib\site-packages\flask_login\login_manager.py", line 165, in unauthorized
    flash(self.login_message, category=self.login_message_category)
  File "C:\microblog\venv\lib\site-packages\flask\helpers.py", line 391, in flash
    session["_flashes"] = flashes
  File "C:\microblog\venv\lib\site-packages\flask\sessions.py", line 97, in _fail
    raise RuntimeError(
RuntimeError: The session is unavailable because no secret key was set.  Set the secret_key on the application to something unique and secret.
